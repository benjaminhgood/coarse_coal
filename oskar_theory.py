import numpy
from scipy.interpolate import interp1d
from math import log
from scipy.optimize import newton

variances = numpy.array([1e-11,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99,1,1.01,1.02,1.03,1.04,1.05,1.06,1.07,1.08,1.09,1.1,1.11,1.12,1.13,1.14,1.15,1.16,1.17,1.18,1.19,1.2,1.21,1.22,1.23,1.24,1.25,1.26,1.27,1.28,1.29,1.3,1.31,1.32,1.33,1.34,1.35,1.36,1.37,1.38,1.39,1.4,1.41,1.42,1.43,1.44,1.45,1.46,1.47,1.48,1.49,1.5,1.51,1.52,1.53,1.54,1.55,1.56,1.57,1.58,1.59,1.6,1.61,1.62,1.63,1.64,1.65,1.66,1.67,1.68,1.69,1.7,1.71,1.72,1.73,1.74,1.75,1.76,1.77,1.78,1.79,1.8,1.81,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.9,1.91,1.92,1.93,1.94,1.95,1.96,1.97,1.98,1.99,2,2.01,2.02,2.03,2.04,2.05,2.06,2.07,2.08,2.09,2.1,2.11,2.12,2.13,2.14,2.15,2.16,2.17,2.18,2.19,2.2,2.21,2.22,2.23,2.24,2.25,2.26,2.27,2.28,2.29,2.3,2.31,2.32,2.33,2.34,2.35,2.36,2.37,2.38,2.39,2.4,2.41,2.42,2.43,2.44,2.45,2.46,2.47,2.48,2.49,2.5,2.51,2.52,2.53,2.54,2.55,2.56,2.57,2.58,2.59,2.6,2.61,2.62,2.63,2.64,2.65,2.66,2.67,2.68,2.69,2.7,2.71,2.72,2.73,2.74,2.75,2.76,2.77,2.78,2.79,2.8,2.81,2.82,2.83,2.84,2.85,2.86,2.87,2.88,2.89,2.9,2.91,2.92,2.93,2.94,2.95,2.96,2.97,2.98,2.99,3,3.01,3.02,3.03,3.04,3.05,3.06,3.07,3.08,3.09,3.1,3.11,3.12,3.13,3.14,3.15,3.16,3.17,3.18,3.19,3.2,3.21,3.22,3.23,3.24,3.25,3.26,3.27,3.28,3.29,3.3,3.31,3.32,3.33,3.34,3.35,3.36,3.37,3.38,3.39,3.4,3.41,3.42,3.43,3.44,3.45,3.46,3.47,3.48,3.49,3.5,3.51,3.52,3.53,3.54,3.55,3.56,3.57,3.58,3.59,3.6,3.61,3.62,3.63,3.64,3.65,3.66,3.67,3.68,3.69,3.7,3.71,3.72,3.73,3.74,3.75,3.76,3.77,3.78,3.79,3.8,3.81,3.82,3.83,3.84,3.85,3.86,3.87,3.88,3.89,3.9,3.91,3.92,3.93,3.94,3.95,3.96,3.97,3.98,3.99,4,4.01,4.02,4.03,4.04,4.05,4.06,4.07,4.08,4.09,4.1,4.11,4.12,4.13,4.14,4.15,4.16,4.17,4.18,4.19,4.2,4.21,4.22,4.23,4.24,4.25,4.26,4.27,4.28,4.29,4.3,4.31,4.32,4.33,4.34,4.35,4.36,4.37,4.38,4.39,4.4,4.41,4.42,4.43,4.44,4.45,4.46,4.47,4.48,4.49,4.5,4.51,4.52,4.53,4.54,4.55,4.56,4.57,4.58,4.59,4.6,4.61,4.62,4.63,4.64,4.65,4.66,4.67,4.68,4.69,4.7,4.71,4.72,4.73,4.74,4.75,4.76,4.77,4.78,4.79,4.8,4.81,4.82,4.83,4.84,4.85,4.86,4.87,4.88,4.89,4.9,4.91,4.92,4.93,4.94,4.95,4.96,4.97,4.98,4.99,5])

neffs = 0.5*numpy.array([1e-11,0.010024,0.020053,0.030092,0.040145,0.050216,0.06031,0.07043,0.080579,0.090761,0.10098,0.11124,0.12153,0.13188,0.14227,0.15271,0.1632,0.17375,0.18436,0.19503,0.20576,0.21656,0.22743,0.23837,0.24938,0.26047,0.27164,0.28289,0.29422,0.30564,0.31714,0.32874,0.34043,0.35221,0.36409,0.37607,0.38816,0.40035,0.41265,0.42505,0.43758,0.45021,0.46296,0.47584,0.48883,0.50196,0.5152,0.52858,0.54209,0.55574,0.56953,0.58346,0.59753,0.61175,0.62612,0.64063,0.6553,0.67012,0.68511,0.70025,0.71556,0.73105,0.7467,0.76253,0.77853,0.79472,0.81109,0.82765,0.84441,0.86135,0.8785,0.89585,0.9134,0.93117,0.94914,0.96734,0.98576,1.0044,1.0233,1.0424,1.0617,1.0813,1.1011,1.1212,1.1416,1.1622,1.183,1.2042,1.2256,1.247,1.2685,1.2903,1.3124,1.3349,1.3577,1.3808,1.4043,1.4281,1.4522,1.4767,1.5015,1.5267,1.5523,1.5782,1.6045,1.6311,1.6582,1.6856,1.7134,1.7416,1.7702,1.7993,1.8287,1.8586,1.8889,1.9196,1.9508,1.9825,2.0146,2.0472,2.0802,2.1138,2.1478,2.1824,2.2174,2.253,2.2891,2.3258,2.363,2.4007,2.4391,2.4781,2.5176,2.5578,2.5985,2.6399,2.6819,2.7246,2.7679,2.8119,2.8566,2.9018,2.9479,2.9947,3.0423,3.0907,3.1399,3.1898,3.2404,3.2919,3.3442,3.3974,3.4515,3.5064,3.5622,3.619,3.6765,3.7351,3.7947,3.8553,3.9168,3.9795,4.0431,4.1078,4.1737,4.2403,4.3084,4.3776,4.4479,4.5195,4.5923,4.6663,4.7417,4.8179,4.8956,4.9748,5.0555,5.1377,5.2212,5.3062,5.3927,5.4807,5.5707,5.6618,5.7544,5.8488,5.9449,6.0427,6.1423,6.2437,6.3469,6.452,6.559,6.668,6.7787,6.8917,7.0067,7.1239,7.2433,7.3649,7.4887,7.6149,7.7434,7.8744,8.0078,8.1434,8.2819,8.423,8.5668,8.7134,8.8627,9.015,9.1702,9.3283,9.4896,9.6539,9.8212,9.992,10.166,10.344,10.525,10.709,10.898,11.09,11.286,11.486,11.689,11.897,12.109,12.326,12.546,12.772,13.001,13.236,13.475,13.72,13.969,14.223,14.483,14.748,15.019,15.295,15.577,15.865,16.16,16.46,16.767,17.08,17.4,17.727,18.06,18.401,18.75,19.105,19.469,19.84,20.22,20.608,21.004,21.41,21.825,22.25,22.683,23.125,23.577,24.04,24.512,24.996,25.49,25.996,26.513,27.042,27.583,28.136,28.702,29.281,29.88,30.487,31.108,31.743,32.392,33.058,33.738,34.434,35.147,35.877,36.625,37.39,38.174,38.976,39.798,40.64,41.502,42.385,43.29,44.217,45.167,46.139,47.136,48.157,49.204,50.276,51.375,52.502,53.657,54.841,56.055,57.299,58.577,59.885,61.227,62.604,64.015,65.464,66.949,68.473,70.036,71.641,73.287,74.976,76.71,78.488,80.315,82.189,84.113,86.089,88.117,90.2,92.339,94.536,96.79,99.107,101.49,103.93,106.44,109.03,111.68,114.4,117.21,120.08,123.04,126.08,129.21,132.42,135.73,139.12,142.62,146.21,149.9,153.7,157.61,161.64,165.78,170.03,174.42,178.93,183.57,188.35,193.27,198.33,203.55,208.9,214.62,220.32,226.19,232.23,238.46,244.87,251.46,258.26,265.28,272.5,279.95,287.62,295.53,303.69,312.1,320.77,329.71,338.94,348.45,358.25,368.37,378.8,389.58,400.67,412.12,423.93,436.12,448.7,461.68,475.09,488.93,503.23,518,533.26,549.02,565.39,582.21,599.59,617.55,636.11,655.29,675.11,695.6,716.78,738.54,761.17,784.57,808.76,833.79,859.68,886.45,914.14,942.79,972.45,1003.1,1034.9,1067.8,1101.8,1137,1173.5,1211.3,1250.4,1290.8,1332.7,1375.9,1420.8,1467.3,1515.5,1565.4,1617.2,1670.8,1726.5,1784.2,1844,1906.1,1970.5,2037.3,2106.6,2178.5,2253,2330.4,2410.6,2493.4,2579.8,2669.5,2762.6,2861.9,2962.2,3066.4,3174.6,3287,3403.8,3525.2,3651.4,3782.5,3918.7,4060.3,4207.5,4360.4,4519.4,4684.8,4856.7,5035.5,5221.5,5415,5616.4,5826.1,6044.4,6271.6,6508.1,6754.3,7010.5,7277.2,7554.9,7843.9,8144.9,8458.3,8784.7,9124.9,9478.9,9847.7,10232,10633,11051,11487,11942,12416,12911,13427,13965,14527,15112,15724,16363,17030,17726,18454,19213,20005])

logneffs = numpy.log(neffs)

interpolation_function = interp1d(logneffs,variances,kind='cubic',bounds_error=True)

def calculate_sigmaeff(neff):
    if neff==0:
        return 0
    else:
        return interpolation_function(log(neff))

def calculate_var_k(Ns,NU):
    neff = (NU*Ns*Ns/2)**(1.0/3)
    logneff = log(neff)
    sigmaeff = interpolation_function(logneff)
    var_k = sigmaeff*(NU/2/Ns)**(2.0/3)
    return min([var_k,NU/Ns])

def calculate_variance(zeroth_variance):
    return (zeroth_variance/2)**(2.0/3)*interpolation_function(log((zeroth_variance/2)**(1.0/3)))

def inverse_variance_NU(var,Ns):
    return newton(lambda x: Ns*Ns*calculate_var_k(Ns,x)-var,var/Ns)

def inverse_variance_Ns(var,NU):
    return newton(lambda x: x*x*calculate_var_k(x,NU)-var,var/NU)

